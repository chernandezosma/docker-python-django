version: "3.7"

services:
    nginx:
        image: nginx:latest
        restart: on-failure
        container_name: pyHttpd
        ports:
            - ${HTTPD_PORT}:80
            - ${HTPPD_REMOTE_DEBUG_PORT}:3500
            - ${HTTPD_DEV_SERVER_PORT}:81
        volumes:
            - ./docker/httpd/config/conf.d:/etc/nginx/conf.d/default.conf
            - static_assets:/var/www/app/static
            - media_assets:/var/www/app/media
        networks:
            - ${NETWORK}
        depends_on:
            - gunicorn

    gunicorn:
        restart: on-failure
        container_name: pyApp
        build:
            dockerfile: ./docker/django/Dockerfile
            context: .
            args:
                PIP_REQUIREMENTS: "${PIP_REQUIREMENTS}"
        command: bash -c "/home/pyuser/.local/bin/gunicorn --workers 3 --bind 0.0.0.0:8000 hello.wsgi:application"
        depends_on:
            - db
        volumes:
            - ./src/hello:/var/www/app/hello
            - media_assets:/var/www/app/media
            - static_assets:/var/www/app/static
        expose:
            - "8000"
            - "3500"
        environment:
            DJANGO_SETTINGS_MODULE: "${DJANGO_SETTINGS_MODULE}"
            DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
            DATABASE_NAME: "${MYSQL_DATABASE}"
            DATABASE_USER: "${MYSQL_USER}"
            DATABASE_PASSWORD: "${MYSQL_PASSWORD}"
            EMAIL_HOST: "${EMAIL_HOST}"
            EMAIL_PORT: "${EMAIL_PORT}"
            EMAIL_HOST_USER: "${EMAIL_HOST_USER}"
            EMAIL_HOST_PASSWORD: "${EMAIL_HOST_PASSWORD}"
        networks:
            - ${NETWORK}

    python_db:
        image: mysql:8.0
        container_name: pyDb
        restart: on-failure
        env_file:
            - ".env"
        build:
            dockerfile: ./docker/db/Dockerfile.db.real
            context: .
            args:
                MYSQL_VERSION: mysql:8.0
            # https://github.com/docker-library/mysql/issues/422
            # https://stackoverflow.com/questions/55559386/how-to-fix-mbind-operation-not-permitted-in-mysql-error-log            
        security_opt:
            - seccomp:unconfined
        ports:
            - ${MYSQL_PORT}:3306
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_LOG_CONSOLE: ${MYSQL_LOG_ENABLED}
        volumes:
            - ./docker/db/scripts/create.real.sql:/docker-entrypoint-initdb.d/create.sql
            - ./docker/db/config/my.cnf:/etc/mysql/conf.d/my.cnf
        networks:
            - ${NETWORK}

volumes:
    static_assets:
    media_assets:

networks:
    python_network: